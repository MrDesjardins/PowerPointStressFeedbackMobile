@using Newtonsoft.Json
@model PowerPointStressFeedbackWeb.Controllers.MergedData

@if (Model == null)
{
    <h1>No data, provide a session id</h1>
}
else
{
    <h1>Power Point Stress Feedback</h1>
    <h2>Data from session id : @Model.SessionId</h2>

    <div id="container" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
    <div id="info-container" style="padding:10px; border:1px solid #778899; border-radius: 3px">
        <header style="font-size: 20px">
            Information
        </header>
        <div style="color: #51B9FE">
            <span style="font-weight: bold; margin-right: 10px;">Relax heartbeat:</span><span id="relax-heartbeat"></span>
        </div>
        <div style="color: #ff9999">
            <span style="font-weight: bold; margin-right: 10px;">Small stress threshold (10%):</span><span id="stress1-heartbeat"></span>
        </div>
        <div style="color: #f20f0f">
            <span style="font-weight: bold; margin-right: 10px;">Small stress threshold (20%):</span><span id="stress2-heartbeat"></span>
        </div>
    </div>
    <script>
        @{
            var data = JsonConvert.SerializeObject(Model.Data);
        }
        var data = @Html.Raw(data);




        $(document).ready(
            function() {

                //Build 2 array. One for the average, one for the range
                var relaxedHeartBeat = 60;
                var heartBeatRange = [];
                var heartBeatAverage = [];
                var temperatureAverage = [];
                var gsrAverage = [];
                var slides = [];
                var stressZone = [];
                var lowStress = relaxedHeartBeat * 1.1;
                var highStress = relaxedHeartBeat * 1.2;
                for(var i=0;i<data.length;i++)
                {
                    slides.push(data[i].SlideIndex);
                    heartBeatRange.push([data[i].HeartBeatMinimum, data[i].HeartBeatMaximum]);
                    heartBeatAverage.push({y:data[i].HeartBeatAverage});
                    temperatureAverage.push(data[i].Temperature);
                    gsrAverage.push({y:data[i].GsrAverage, dateTime:data[i].Time.replace('T',' '), timespan:data[i].SecondsOnSlide});
                    if(i === 0)
                    {
                        relaxedHeartBeat = data[i].HeartBeatAverage; //Relaxed Heart Beat is the minimum before the first slide
                    }
                    stressZone.push({value:lowStress, fillColor:'#51B9FE'});
                    stressZone.push({value:highStress, fillColor:'#ff9999'});
                    stressZone.push({value:8000, fillColor:'#f20f0f'});
                    //if(data[i].HeartBeatAverage>highStress){ //Extreme stress
                    //    stressZone.push({value:data[i].SlideIndex, fillColor:'#f20f0f'});
                    //}
                    //else if(data[i].HeartBeatAverage>lowStress){ // More stressed
                    //    stressZone.push({value:data[i].SlideIndex, fillColor:'#ff9999'});
                    //}
                    //else{ //Relax
                    //    stressZone.push({value:data[i].SlideIndex, fillColor:'#51B9FE'});
                    //}
                }
                //stressZone.push({value:8000, fillColor:'#51B9FE'});
                $('#relax-heartbeat').text((relaxedHeartBeat).toFixed());
                $('#stress1-heartbeat').text((relaxedHeartBeat*1.1).toFixed());
                $('#stress2-heartbeat').text((relaxedHeartBeat*1.2).toFixed());
                //http://api.highcharts.com/highcharts#tooltip
                $('#container').highcharts({
                    chart: {
                        zoomType: 'xy',
                        alignTicks: true
                    },
                    title: {
                        text: 'Heart Beat,  Skin Temperature and GSR'
                    },
                    xAxis: [{
                        categories: slides
                        ,title:  {
                            text: 'Slide number'
                        }
                    }],
                    yAxis: [{ // Primary yAxis
                            title: {
                                text: 'Heart Beat',
                                style: {
                                    color: '#19566b'
                                }
                            },
                            labels: {
                                format: '{value} bpm',
                                style: {
                                    color: '#19566b'
                                }
                            }
                        ,/*plotLines: [
                            {
                                color: '#f20f0f',
                                width: 1,
                                value: highStress,
                                zIndex:5,
                                dashStyle: 'ShortDot'
                            }
                            ,{   
                                color: '#ff9999',
                                width: 1,
                                value: lowStress,
                                zIndex:5,
                                dashStyle: 'ShortDot'
                            }
                        ]
                        ,*/
                        min:50,

                    }, { // Secondary yAxis
                        title: {
                            text: 'Body Temperature',
                            style: {
                                color: 'rgba(255,155,0,1)'
                            }
                        },
                        labels: {
                            format: '{value} °C',
                            style: {
                                color: 'rgba(255,155,0,1)'
                            }
                        },
                        opposite: true,
                        min:25,
                        max:45
                    }, { // Third yAxis (GSR)
                        title: {
                            text: 'Galvanic Skin Response (GSR)',
                            style: {
                                color: 'rgba(212,124,247,1)'
                            }
                        },
                        labels: {
                            format: '{value} Ω',
                            style: {
                                color: 'rgba(212,124,247,1)'
                            }
                        },
                        opposite: true
                    }],

                    tooltip: {
                        shared: true,
                        headerFormat: '<span style="font-weight:bold; font-size:16px; padding-bottom:5px;">Slide {point.key}</span><br/>'
                    },

                    series: [{
                        name: 'Body Temperature',
                        type: 'column',
                        yAxis: 1,
                        data: temperatureAverage,
                        color: 'rgba(255,155,0,0.3)',
                        zIndex:4,
                        tooltip: {
                            pointFormat: '<span style="font-weight: bold; color: rgba(255,155,0,1)">{series.name}</span>: <b>{point.y:.1f} °C</b><br/>'
                        }
                        , borderWidth: 0
                        /*, pointPadding: 0
                        , groupPadding: 0*/
                    }
                    , {
                        name: 'Heart Beat Average',
                        type: 'areaspline',
                        data: heartBeatAverage,
                        tooltip: {
                            pointFormat: '<span style="font-weight: bold; color: {series.color}">{series.name}</span>: <b>{point.y} bpm</b><br/>'
                        }
                        ,lineWidth: 3
                        ,zoneAxis: 'y'
                        ,zones: stressZone
                        ,color:'#19566b'
                        ,fillColor:'rgba(81,185,254,0.5)'
                    }
                    , {
                        name: 'Heart Beat Min-Max',
                        type: 'errorbar',
                        data: heartBeatRange,
                        tooltip: {
                            pointFormat: '(Min-Max: {point.low}-{point.high} bpm)<br/>'
                        }
                    }
                    ,{
                        name: 'Galvanic Skin Response (GSR)',
                        type: 'line',
                        yAxis: 2,
                        data: gsrAverage,
                        color: 'rgba(212,124,247,0.8)',
                        tooltip: {
                            pointFormat: '<span style="font-weight: bold; color: rgba(212,124,247,1)">{series.name}</span>: <b>{point.y:.1f} Ω</b><br/><b>DateTime:</b>{point.dateTime} for {point.timespan} seconds.'
                        }
                        ,lineWidth: 2
                        ,dashStyle: 'ShortDash'
                    }]
                });

          
        });
    </script>
}

